# ðŸ“Š DataWareHouse Setup Script

This repository contains a SQL Server script to initialize a structured data warehouse environment using a multi-layered schema approach: **Bronze**, **Silver**, and **Gold**.

---

## âœ… What This Script Does

1. **Connects to the master database**
2. **Checks if the `DataWareHouse` database exists**
3. **Drops the existing `DataWareHouse` database (if found)**
4. **Creates a fresh `DataWareHouse` database**
5. **Switches context to the new database**
6. **Creates three schemas:**
   - ðŸŸ¤ **Bronze** â€“ raw ingested data
   - âšª **Silver** â€“ cleaned/validated data
   - ðŸŸ¡ **Gold** â€“ business-ready curated data

---

## ðŸ§¾ SQL Script (initialize_datawarehouse.sql)

```sql
USE master;
GO

-- Drop and recreate Database 
IF EXISTS (SELECT 1 FROM sys.databases WHERE name = 'DataWareHouse')
BEGIN
    ALTER DATABASE DataWareHouse SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE DataWareHouse;
END;
GO

-- Create New Database
CREATE DATABASE DataWareHouse;
GO

USE DataWareHouse;
GO


--Creating Necessary Schemas

-- Create Bronze schema if it doesn't exist
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'Bronze')
BEGIN
    BEGIN TRY
        EXEC('CREATE SCHEMA Bronze');
        PRINT 'Schema Bronze created.';
    END TRY
    BEGIN CATCH
        PRINT 'Error creating schema Bronze.';
        PRINT ERROR_MESSAGE();
    END CATCH
END

-- Create Silver schema
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'Silver')
BEGIN
    BEGIN TRY
        EXEC('CREATE SCHEMA Silver');
        PRINT 'Schema Silver created.';
    END TRY
    BEGIN CATCH
        PRINT 'Error creating schema Silver.';
        PRINT ERROR_MESSAGE();
    END CATCH
END

-- Create Gold schema
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'Gold')
BEGIN
    BEGIN TRY
        EXEC('CREATE SCHEMA Gold');
        PRINT 'Schema Gold created.';
    END TRY
    BEGIN CATCH
        PRINT 'Error creating schema Gold.';
        PRINT ERROR_MESSAGE();
    END CATCH
END
